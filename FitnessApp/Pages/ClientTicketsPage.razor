@page "/clientTickets"

<PageTitle>Client Tickets</PageTitle>

@using FitnessApiClient.Api
@using FitnessApiClient.Context
@using FitnessApiClient.Validator
@using Microsoft.EntityFrameworkCore
@using FitnessApiClient
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Components.Web

<h1>- Client Tickets -</h1>

@if (loaded)
{
    <div class="alert alert-success fade-in" role="alert">Loaded successfully!</div>
}
@if (refresh_clicked)
{
    <div class="alert alert-info fade-in" role="alert" style="right: 10px">Loading...</div>
}

<button class="refresh-table" @onclick="async () => await LoadClientTicketsAsync()">Refresh</button>
<table class="client_tickets_table">
    <thead>
        <tr>
            <th>ID</th>
            <th>ClientId</th>
            <th>TicketTypeId</th>
            <th>IssueDate</th>
            <th>Barcode</th>
            <th>NumOfEntries</th>
            <th>BuyPrice</th>
            <th>Valid</th>
            <th>FirstUsageDate</th>
            <th>ArenaId</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var clientTicket in clientTickets)
        {
            <tr>
                <td>@clientTicket.ClientTicketsId</td>
                <td>@clientTicket.ClientId</td>
                <td>@clientTicket.TicketTypeId</td>
                <td>@clientTicket.IssueDate</td>
                <td>@clientTicket.Barcode</td>
                <td>@clientTicket.NumOfEntries</td>
                <td>@clientTicket.BuyPrice</td>
                <td>@clientTicket.Valid</td>
                <td>@clientTicket.FirstUsageDate</td>
                <td>@clientTicket.ArenaId</td>
            </tr>
        }
    </tbody>
</table>

@code {
    private readonly AdminDbClient adminDbClient = new AdminDbClient(new MyDbContext());
    private List<ClientTickets> clientTickets = new List<ClientTickets>();

    private bool refresh_clicked = false;
    private bool loaded = false;

    protected override async Task OnInitializedAsync()
    {
        await LoadClientTicketsAsync();
    }

    private async Task ClosePopup(int type)
    {
        StateHasChanged();
        await Task.Delay(2000);
        loaded = false;
    }
    

    private async Task LoadClientTicketsAsync()
    {
        refresh_clicked = true;
        using (var adminDbClient = new AdminDbClient(new MyDbContext()))
        {
            int act_length = clientTickets.Count();
            bool empty = false;
            if (act_length == 0)
            {
                empty = true;
            }
            clientTickets = await adminDbClient.GetTable<ClientTickets>();
            if (!empty || clientTickets.Count() > act_length)
            {
                loaded = true;
                refresh_clicked = false;
                await ClosePopup(4);
            }
        }
    }
}
