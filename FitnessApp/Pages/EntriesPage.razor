@page "/entries"

<PageTitle>Entries</PageTitle>

@using FitnessApiClient.Api
@using FitnessApiClient.Context
@using FitnessApiClient.Validator
@using Microsoft.EntityFrameworkCore
@using FitnessApiClient
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Components.Web

<AuthorizeView>
    <Authorized>
        <h1>- Entries -</h1>

        @if (loaded)
        {
            <div class="alert alert-success fade-in" role="alert">Loaded successfully!</div>
        }
        @if (refresh_clicked)
        {
            <div class="alert alert-info fade-in" role="alert" style="right: 10px">Loading...</div>
        }

        <button class="refresh-table" @onclick="async () => await LoadEntriesAsync()">Refresh</button>
        <table class="client_tickets_table">
            <thead>
                <tr>
                    <th>ClientId</th>
                    <th>TicketTypeId</th>
                    <th>Date</th>
                    <th>Barcode</th>
                    <th>ArenaId</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var entry in entries)
                {
                    <tr>
                        <td>@entry.ClientId</td>
                        <td>@entry.TicketTypeId</td>
                        <td>@entry.Date</td>
                        <td>@entry.Barcode</td>
                        <td>@entry.ArenaId</td>
                    </tr>
                }
            </tbody>
        </table>
    </Authorized>
    <NotAuthorized>
        <h2>Please log in to get permission for this page.</h2>
    </NotAuthorized>
</AuthorizeView>

@code {
    private readonly AdminDbClient adminDbClient = new AdminDbClient(new MyDbContext());
    private List<Entries> entries = new List<Entries>();

    private bool refresh_clicked = false;
    private bool loaded = false;

    protected override async Task OnInitializedAsync()
    {
        await LoadEntriesAsync();
    }

    private async Task ClosePopup()
    {
        StateHasChanged();
        await Task.Delay(2000);
        loaded = false;
    }


    private async Task LoadEntriesAsync()
    {
        refresh_clicked = true;
        using (var adminDbClient = new AdminDbClient(new MyDbContext()))
        {
            int act_length = entries.Count();
            bool empty = false;
            if (act_length == 0)
            {
                empty = true;
            }
            entries = await adminDbClient.GetTable<Entries>();
            if (!empty || entries.Count() > act_length)
            {
                loaded = true;
                refresh_clicked = false;
                await ClosePopup();
            }
        }
    }
}